{"ts":1357838366139,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1357838369612,"patch":[[{"diffs":[[1,"(function () {\r\n\r\n  L.TileLayer.Common = L.TileLayer.extend({\r\n    initialize: function (options) {\r\n      L.TileLayer.prototype.initialize.call(this, this.url, options);\r\n    }\r\n  });\r\n\r\n  // OSM\r\n  var osmMapAttr = '&copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>';\r\n  var osmDataAttr = 'Map data ' + osmMapAttr;\r\n  L.TileLayer.OpenStreetMap = L.TileLayer.Common.extend({\r\n    url: 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n    options: {attribution:osmMapAttr}\r\n  });\r\n  L.TileLayer.OpenStreetMap.Mapnik = L.TileLayer.OpenStreetMap;\r\n  L.TileLayer.OpenStreetMap.BlackAndWhite = L.TileLayer.OpenStreetMap.extend({\r\n    url: 'http://{s}.www.toolserver.org/tiles/bw-mapnik/{z}/{x}/{y}.png'\r\n  });\r\n  L.TileLayer.OpenStreetMap.DE = L.TileLayer.OpenStreetMap.extend({\r\n    url: 'http://{s}.tile.openstreetmap.de/tiles/osmde/{z}/{x}/{y}.png'\r\n  });\r\n\r\n  // OpenCycleMap/Thunderforest\r\n  var ocmAttr = '&copy; <a href=\"http://www.opencyclemap.org\">OpenCycleMap</a>, <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors, <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>'\r\n  L.TileLayer.OpenCycleMap = L.TileLayer.Common.extend({\r\n    url: 'http://{s}.tile.opencyclemap.org/cycle/{z}/{x}/{y}.png',\r\n    options: {attribution:ocmAttr}\r\n  });\r\n  L.TileLayer.Thunderforest = L.TileLayer.OpenCycleMap;\r\n  L.TileLayer.Thunderforest.OpenCycleMap = L.TileLayer.Thunderforest;\r\n  L.TileLayer.Thunderforest.Transport = L.TileLayer.Thunderforest.extend({\r\n    url: 'http://{s}.tile2.opencyclemap.org/transport/{z}/{x}/{y}.png'\r\n  });\r\n  L.TileLayer.Thunderforest.Landscape = L.TileLayer.Thunderforest.extend({\r\n    url: 'http://{s}.tile3.opencyclemap.org/landscape/{z}/{x}/{y}.png'\r\n  });\r\n\r\n  // MapQuest\r\n  var mapQuestAttr = 'Tiles Courtesy of <a href=\"http://www.mapquest.com/\">MapQuest</a> &mdash; ';\r\n  L.TileLayer.MapQuestOpen = L.TileLayer.Common.extend({\r\n    url: 'http://otile{s}.mqcdn.com/tiles/1.0.0/osm/{z}/{x}/{y}.jpeg',\r\n    options: {attribution:mapQuestAttr + osmDataAttr, subdomains:'1234'}\r\n  });\r\n  L.TileLayer.MapQuestOpen.OSM = L.TileLayer.MapQuestOpen;\r\n  L.TileLayer.MapQuestOpen.Aerial = L.TileLayer.MapQuestOpen.extend({\r\n    url: 'http://oatile{s}.mqcdn.com/naip/{z}/{x}/{y}.jpg',\r\n    options: {attribution:mapQuestAttr + 'Portions Courtesy NASA/JPL-Caltech and U.S. Depart. of Agriculture, Farm Service Agency'}\r\n  });\r\n\r\n  // MapBox\r\n  var mapBoxAttr = 'Imagery from <a href=\"http://mapbox.com/about/maps/\">MapBox</a> &mdash; ' + osmDataAttr;\r\n  L.TileLayer.MapBox = L.TileLayer.Common.extend({\r\n    url: 'http://{s}.tiles.mapbox.com/v3/mapbox.mapbox-simple/{z}/{x}/{y}.png',\r\n    options: {attribution:mapBoxAttr, subdomains:['a','b','c','d']}\r\n  });\r\n  L.TileLayer.MapBox.Simple = L.TileLayer.MapBox;\r\n  L.TileLayer.MapBox.Streets = L.TileLayer.MapBox.extend({\r\n    url: 'http://{s}.tiles.mapbox.com/v3/mapbox.mapbox-streets/{z}/{x}/{y}.png'\r\n  });\r\n  L.TileLayer.MapBox.Light = L.TileLayer.MapBox.extend({\r\n    url: 'http://{s}.tiles.mapbox.com/v3/mapbox.mapbox-light/{z}/{x}/{y}.png'\r\n  });\r\n  L.TileLayer.MapBox.Lacquer = L.TileLayer.MapBox.extend({\r\n    url: 'http://{s}.tiles.mapbox.com/v3/mapbox.mapbox-lacquer/{z}/{x}/{y}.png'\r\n  });\r\n  L.TileLayer.MapBox.Warden = L.TileLayer.MapBox.extend({\r\n    url: 'http://{s}.tiles.mapbox.com/v3/mapbox.mapbox-warden/{z}/{x}/{y}.png'\r\n  });\r\n\r\n  // Stamen\r\n  var stamenAttr = 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; ' + osmDataAttr;\r\n  L.TileLayer.Stamen = L.TileLayer.Common.extend({\r\n    url: 'http://{s}.tile.stamen.com/toner/{z}/{x}/{y}.png',\r\n    options: {attribution:stamenAttr, subdomains:['a','b','c','d'], minZoom:0, maxZoom:20}\r\n  });\r\n  L.TileLayer.Stamen.Toner = L.TileLayer.Stamen;\r\n  L.TileLayer.Stamen.TonerLines = L.TileLayer.Stamen.extend({\r\n    url: 'http://{s}.tile.stamen.com/toner-lines/{z}/{x}/{y}.png'\r\n  });\r\n  L.TileLayer.Stamen.TonerLabels = L.TileLayer.Stamen.extend({\r\n    url: 'http://{s}.tile.stamen.com/toner-labels/{z}/{x}/{y}.png'\r\n  });\r\n  L.TileLayer.Stamen.Terrain = L.TileLayer.Stamen.extend({\r\n    url: 'http://{s}.tile.stamen.com/terrain/{z}/{x}/{y}.png',\r\n    options: {minZoom:4, maxZoom:18}\r\n  });\r\n  L.TileLayer.Stamen.TerrainBackground = L.TileLayer.Stamen.extend({\r\n    url: 'http://{s}.tile.stamen.com/terrain-background/{z}/{x}/{y}.png',\r\n    options: {minZoom:4, maxZoom:18}\r\n  });\r\n  L.TileLayer.Stamen.Watercolor = L.TileLayer.Stamen.extend({\r\n    url: 'http://{s}.tile.stamen.com/watercolor/{z}/{x}/{y}.png',\r\n    options: {minZoom:3, maxZoom:16}\r\n  });\r\n\r\n  // Esri\r\n  var EsriAttr = 'Tiles &copy; Esri';\r\n  L.TileLayer.Esri = L.TileLayer.Common.extend({\r\n    url: 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}',\r\n    options: {attribution:EsriAttr}\r\n  });\r\n  L.TileLayer.Esri.WorldStreetMap = L.TileLayer.Esri;\r\n  L.TileLayer.Esri.DeLorme = L.TileLayer.Esri.extend({\r\n    url: 'http://server.arcgisonline.com/ArcGIS/rest/services/Specialty/DeLorme_World_Base_Map/MapServer/tile/{z}/{y}/{x}',\r\n    options: {attribution:EsriAttr + ' &mdash; Copyright: Â©2012 DeLorme'}\r\n  });\r\n  L.TileLayer.Esri.WorldTopoMap = L.TileLayer.Esri.extend({\r\n    url: 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Topo_Map/MapServer/tile/{z}/{y}/{x}',\r\n    options: {attribution:EsriAttr + ' &mdash; Esri, DeLorme, NAVTEQ, TomTom, Intermap, iPC, USGS, FAO, NPS, NRCAN, GeoBase, Kadaster NL, Ordnance Survey, Esri Japan, METI, Esri China (Hong Kong), and the GIS User Community'}\r\n  });\r\n  L.TileLayer.Esri.WorldImagery = L.TileLayer.Esri.extend({\r\n    url: 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\r\n    options: {attribution:EsriAttr + ' &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'}\r\n  });\r\n  L.TileLayer.Esri.OceanBasemap = L.TileLayer.Esri.extend({\r\n    url: 'http://services.arcgisonline.com/ArcGIS/rest/services/Ocean_Basemap/MapServer/tile/{z}/{y}/{x}',\r\n    options: {attribution:EsriAttr + ' &mdash; Sources: GEBCO, NOAA, CHS, OSU, UNH, CSUMB, National Geographic, DeLorme, NAVTEQ, and Esri'}\r\n  });\r\n  L.TileLayer.Esri.NatGeoWorldMap = L.TileLayer.Esri.extend({\r\n    url: 'http://services.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/tile/{z}/{y}/{x}',\r\n    options: {attribution:EsriAttr + ' &mdash; National Geographic, Esri, DeLorme, NAVTEQ, UNEP-WCMC, USGS, NASA, ESA, METI, NRCAN, GEBCO, NOAA, iPC'}\r\n  });\r\n  //toposm\r\n  var TopOSMAttr = 'Map by <a href=\"http://wiki.openstreetmap.org/wiki/User:Ahlzen\">Lars Ahlzen</a>    &nbsp;&nbsp;&bull;&nbsp;&nbsp;    License: <a href=\"http://creativecommons.org/licenses/by-sa/2.0/\" >CC-BY-SA</a>    &nbsp;&nbsp;&bull;&nbsp;&nbsp;    Data from <a href=\"http://www.openstreetmap.org\">OpenStreetMap</a> and    <a href=\"http://www.mass.gov/mgis/\">MassGIS</a>\t&nbsp;&nbsp;&bull;&nbsp;&nbsp;\t<a href=\"http://wiki.openstreetmap.org/wiki/TopOSM\">More info about TopOSM</a>;'\r\n  L.TileLayer.TopOSM = L.TileLayer.Common.extend({\r\n    url: 'http://tile{s}.toposm.com/ma/final/{z}/{x}/{y}.png',\r\n    options: {attribution:TopOSMAttr,subdomains:['1','2','3']}\r\n  });\r\n  L.TileLayer.TopOSM.MA=L.TileLayer.TopOSM;\r\n  //MAPC\r\n  var mapcATR ='Map tiles by <a href=\"http://mapc.org\">MAPC</a>, Data by <a href=\"http://www.mass.gov/mgis/\">MassGIS</a>.';\r\n  L.TileLayer.MAPC = L.TileLayer.Common.extend({\r\n    url: \"http://tiles.mapc.org/basemap/{z}/{x}/{y}.png\",\r\n    options: {attribution:mapcATR,\"minZoom\": 9,\"maxZoom\": 17}\r\n  });\r\n  L.TileLayer.MAPC.Base=L.TileLayer.MAPC;\r\n  L.TileLayer.MAPC.Trailmap=L.TileLayer.MAPC.extend({\r\n      url:\"http://tiles.mapc.org/trailmap/{z}/{x}/{y}.png\"\r\n      });\r\n\r\n  //lowercase methods\r\n  L.tileLayer.openStreetMap = {\r\n    mapnik:function(){return new L.TileLayer.OpenStreetMap.Mapnik;},\r\n    de:function(){return new L.TileLayer.OpenStreetMap.DE;},\r\n    blackAndWhite:function(){return new L.TileLayer.OpenStreetMap.BlackAndWhite;}\r\n  };\r\n  L.tileLayer.thunderforest = {\r\n    openCycleMap:function(){return new L.TileLayer.Thunderforest.OpenCycleMap;},\r\n    transport:function(){return new L.TileLayer.Thunderforest.Transport;},\r\n    landscape:function(){return new L.TileLayer.Thunderforest.Landscape;}\r\n  };\r\n  L.tileLayer.mapQuestOpen = {\r\n    osm:function(){return new L.TileLayer.MapQuestOpen.OSM;},\r\n    aerial:function(){return new L.TileLayer.MapQuestOpen.Aerial;}\r\n  };\r\n  L.tileLayer.mapBox = {\r\n    simple:function(){return new L.TileLayer.MapBox.Simple;},\r\n    streets:function(){return new L.TileLayer.MapBox.Streets;},\r\n    light:function(){return new L.TileLayer.MapBox.Light;},\r\n    lacquer:function(){return new L.TileLayer.MapBox.Lacquer;},\r\n    warden:function(){return new L.TileLayer.MapBox.Warden;}\r\n  };\r\n  L.tileLayer.stamen = {\r\n    toner:function(){return new L.TileLayer.Stamen.Toner;},\r\n    terrain:function(){return new L.TileLayer.Stamen.Terrain;},\r\n    terrainbackground:function(){return new L.TileLayer.Stamen.TerrainBackground;},\r\n    watercolor:function(){return new L.TileLayer.Stamen.Watercolor;}\r\n  };\r\n  L.tileLayer.esri = {\r\n    worldStreetMap:function(){return new L.TileLayer.Esri.WorldStreetMap;},\r\n    deLorme:function(){return new L.TileLayer.Esri.DeLorme;},\r\n    worldTopoMap:function(){return new L.TileLayer.Esri.WorldTopoMap;},\r\n    worldImagery:function(){return new L.TileLayer.Esri.WorldImagery;},\r\n    oceanBasemap:function(){return new L.TileLayer.Esri.OceanBasemap;},\r\n    natGeoWorldMap:function(){return new L.TileLayer.Esri.NatGeoWorldMap;}\r\n  };\r\n  L.tileLayer.topOSM = {\r\n    ma:function(){return new L.TileLayer.TopOSM.MA;}\r\n  };\r\n  L.tileLayer.mapc = {\r\n    base:function(){return new L.TileLayer.MAPC.Base;},\r\n    trailmap:function(){return new L.TileLayer.MAPC.Trailmap;}\r\n  };\r\n  //controls!\r\n  L.control.layers.filled = function(base, overlay, options){\r\n      var map;\r\n      if(\"map\" in options){map = options.map; delete options.map;};\r\n        var len = base.length;\r\n        if(len === 0){return {}};\r\n        var out = {};\r\n        for(var i = 0;i<len;i++){\r\n            var layer = base[i];\r\n            var layerParts = layer.split(\".\");\r\n            if(layerParts.length ===2 && layerParts[0] in L.TileLayer && layerParts[01] in L.TileLayer[layerParts[0]]){\r\n                out[layerParts.join(\" \")] = new L.TileLayer[layerParts[0]][layerParts[1]];\r\n                if(i===0 && map){\r\n                    out[layerParts.join(\" \")].addTo(map);\r\n                }\r\n            }\r\n        }\r\n    var lc = L.control.layers(out, overlay, options);\r\n    if(map){\r\n        lc.addTo(map)\r\n    }\r\n    return lc;\r\n  };\r\n}());\r\n"]],"start1":0,"start2":0,"length1":0,"length2":10822}]],"length":10822,"saved":false}
